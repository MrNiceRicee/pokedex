import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { trpc } from '../utils/trpc';
import Layout from '../components/layout';

const PokemonLoaderComponent = () => {
  return (
    <div className="flex flex-col items-center justify-center p-4 bg-white rounded-lg shadow-lg">
      <div className="h-24 w-24">
        <Image
          width={96}
          height={96}
          layout="responsive"
          src="/swag-placement.png"
          alt={'whos that pokemon'}
          placeholder="blur"
          blurDataURL="swag-placement.png"
          className="h-24 w-24"
        />
      </div>
      <h2 className="text-2xl font-bold text-gray-700">
        {"who's that pokemon!"}
      </h2>
      <div className="flex flex-row items-center justify-center pt-3 space-x-3">
        <button className="px-4 py-2 text-sm font-medium text-white bg-grey-500 rounded-md ">
          Details
        </button>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const allPokemon = trpc.useInfiniteQuery(['pokemonApi.getAllPokemon', {}], {
    getNextPageParam: (lastPage) => lastPage.next,
  });

  const loadNext = () => {
    allPokemon.fetchNextPage();
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout>
        <h1 className="font-pokemon text-5xl md:text-[5rem] leading-normal font-extrabold text-gray-700">
          Poke
          <span className="text-yellow-300 text-stroke drop-shadow-text">
            dex
          </span>{' '}
          App
        </h1>
        <div className="grid gap-3 pt-3 mt-3 text-center grid-cols-1 w-full lg:grid-cols-4 md:grid-cols-2">
          <>
            {allPokemon.data?.pages.map((page) =>
              page.results.map((pokemon) => {
                {
                  const initialNumber = pokemon.url.match(/\/(\d+)\//)?.[1];
                  return (
                    <div
                      key={pokemon.name}
                      className="flex flex-col items-center justify-center p-4 bg-white rounded-lg shadow-lg w-full"
                    >
                      <div className="w-24 h-24 relative">
                        <Image
                          layout="fill"
                          src={`https://serebii.net/art/th/${initialNumber}.png`}
                          alt={pokemon.name}
                          placeholder="blur"
                          blurDataURL="swag-placement.png"
                          objectFit="contain"
                        />
                      </div>
                      <h2 className="text-2xl font-bold text-gray-700">
                        {pokemon.name}
                      </h2>
                      <div className="flex flex-row items-center justify-center pt-3 space-x-3">
                        <Link href={`/pokemon/${initialNumber}`}>
                          <a
                            className="px-4 py-2 text-sm font-medium text-blue-500 outline-blue-500 outline outline-2 rounded-md
                          hover:bg-yellow-500 hover:text-white duration-300 ease-in-out
                          focus:bg-yellow-500 focus:text-white"
                          >
                            Details
                          </a>
                        </Link>
                      </div>
                    </div>
                  );
                }
              })
            )}
            {allPokemon.isLoading ? <PokemonLoaderComponent /> : null}
          </>
        </div>
        <button
          className="my-5 px-4 py-2 w-full text-sm font-medium text-white bg-purple-500 rounded-md hover:bg-purple-600"
          onClick={loadNext}
        >
          load more
        </button>
      </Layout>
    </>
  );
};

export default Home;
